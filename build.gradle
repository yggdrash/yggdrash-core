
plugins {
    id 'com.google.protobuf' version '0.8.7'
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'com.google.protobuf'

repositories {
    mavenCentral()
}

signing {
    sign configurations.archives
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options.encoding = 'UTF-8'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


group = 'io.yggdrash'
version = '0.10.1-beta'


ext {
    grpcVersion         = '1.20.0'
    protobufVersion     = '3.7.1'
    levelDBVersion      = '0.11'
    ehcacheVersion      = '3.7.1'
    scastleVersion      = '1.58.0.0'
    commonsCodecVersion = '1.11'
    commonsIOVersion    = '2.6'
    gsonVersion         = '2.8.5'
    jsonSimpleVersion   = '1.1'
    jacksonVersion      = '2.9.8'
    typesafeVersion     = '1.3.3'
    logbackVersion      = '1.2.3'
    annotationVersion   = '1.3.2'
    assertjVersion      = '3.11.1'
    commonLangVersion   = '3.8.1'
    collectionsVersion  = '4.2'
    logbackEsAppenderVersion  = '1.6'
    logbackJinoVersion  = '3.0.12'
    equinoxVersion = '3.13.0.v20180226-1711'
    set('elasticsearch.version', '7.0.1')
}


dependencies {
    compile "io.yggdrash:contract-core:0.10.2-beta"
    compile "io.yggdrash:yggdrash-common:0.10.1-beta"
    compile 'com.rabbitmq:amqp-client:5.7.3'
    compile "io.grpc:grpc-services:${grpcVersion}"
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    compile "org.ehcache:ehcache:${ehcacheVersion}"
    compile "com.typesafe:config:${typesafeVersion}"
    compile 'org.beryx:text-io:3.3.0'
    compileOnly "javax.annotation:javax.annotation-api:${annotationVersion}"
    testCompile "org.mockito:mockito-core:1.+"
    testCompile "org.assertj:assertj-core:${assertjVersion}"
}

protobuf {
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {

            // Sign POM
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            // Destination
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            // Add required metadata to POM
            pom.project {
                name 'Yggdrash Core Library'
                packaging 'jar'
                description 'Yggdrash Core Library'
                url 'https://yggdrash.io'

                scm {
                    connection 'scm:git:git://github.com/yggdrash/yggdrash.git'
                    developerConnection 'scm:git:ssh://github.com/yggdrash/yggdrash.git'
                    url 'https://github.com/yggdrash/common/tree/master'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'yggdrash'
                        name 'YGGDRASH DEVELOP TEAM'
                        email 'dev@yggdrash.io'
                        organization 'yggdrash'
                        organizationUrl 'http://yggdrash.io'
                    }
                }
            }
        }
    }
}